name: "Build and Release APK"

on:
  # Run only when explicitly dispatched (by sync-upstream or manually)
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      BUILD_TAG: ${{ steps.extract_version.outputs.build_tag }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      - name: Extract Base Version and Generate Unique Build Tag
        id: extract_version
        run: |
          # Extract version string from build.gradle (adjust regex if needed)
          BASE_VERSION=$(grep 'versionName' app/build.gradle | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')
          if [ -z "$BASE_VERSION" ]; then
            echo "No version found in build.gradle" && exit 1
          fi
          # Create a unique tag (e.g. v1.2.3-20250205123045)
          BUILD_TAG="v${BASE_VERSION}-$(date +'%Y%m%d%H%M%S')"
          echo "BUILD_TAG=${BUILD_TAG}" >> $GITHUB_ENV
          echo "::set-output name=build_tag::${BUILD_TAG}"
          echo "Unique build tag is ${BUILD_TAG}"

      - name: Set Git User Identity
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Create and Push Tag
        run: |
          git tag ${BUILD_TAG}
          git push origin ${BUILD_TAG}

      - name: Build the APK
        run: ./gradlew build

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4.3.5
        with:
          name: Release-APK
          path: app/build/outputs/apk/release/app-release-*.apk

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Load BUILD_TAG Variable
        run: echo "BUILD_TAG=${{ needs.build.outputs.BUILD_TAG }}" >> $GITHUB_ENV

      - name: Download APK Artifact
        uses: actions/download-artifact@v4
        with:
          name: Release-APK
          path: release-apk

      - name: List Downloaded APK Files (Debug)
        run: ls -lR release-apk

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.BUILD_TAG }}
          name: "Release ${{ env.BUILD_TAG }}"
          body: "Automated release for build tag ${{ env.BUILD_TAG }}"
          files: release-apk/app-release-*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
